////////////////////////////////////////////////////////////////
// https://atcoder.jp/contests/dp/tasks/dp_d
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// D-Knapsack1TimeLimit:2sec/MemoryLimit:1024MiBScore:100pointsP
// roblemStatementThereareNitems,numbered1,2,…,N.Foreachi(1≤i≤N)
// ,Itemihasaweightofwiandavalueofvi.Tarohasdecidedtochoosesomeo
// ftheNitemsandcarrythemhomeinaknapsack.Thecapacityoftheknapsac
// kisW,whichmeansthatthesumoftheweightsofitemstakenmustbeatmost
// W.FindthemaximumpossiblesumofthevaluesofitemsthatTarotakeshom
// e.ConstraintsAllvaluesininputareintegers.1≤N≤1001≤W≤10**51≤wi
// ≤W1≤vi≤10**9InputInputisgivenfromStandardInputinthefollowingf
// ormat:NWw1v1w2v2..wNvN​OutputPrintthemaximumpossiblesumoftheva
// luesofitemsthatTarotakeshome.SampleInput138330450560SampleOut
// put190Items1and3shouldbetaken.Then,thesumoftheweightsis3+5=8,
// andthesumofthevaluesis30+60=90.SampleInput2551100000000011000
// 000000110000000001100000000011000000000SampleOutput2500000000
// 0Theanswermaynotfitintoa32-bitintegertype.SampleInput36156556
// 64663572SampleOutput317Items2,4and5shouldbetaken.Then,thesumo
// ftheweightsis5+6+3=14,andthesumofthevaluesis6+6+5=17.
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
# include <iostream>
# include <vector>
# include <algorithm>
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
using namespace std;
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
# define OVERLOAD_OSTREAM_OPERATOR( Container )                \
template <typename... T>                                       \
ostream& operator<<( ostream& os, const Container<T...>& con ){\
    os << "[ ";                                                \
    for( const auto& y: con ) os << y << " ";                  \
    return os <<"]";                                           \
}
OVERLOAD_OSTREAM_OPERATOR( vector );
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
typedef unsigned long long u64;
////////////////////////////////////////////////////////////////
// <> 2.1.50: On a smooth horizontal plane there is a wedge with
// an angle α at the base. A body of mass m placed on the wedge
// descends with an acceleration directed at an angle (β > α) to
// the horizontal. Determine the mass of the wedge
// #############################################################
// #############################################################
// ########                                             ######## 
// ########                                             ######## 
// ########    `              m                         ######## 
// ########    `  `         `                           ######## 
// ########    `     `    `    `                        ######## 
// ########    `        `    \    `                     ######## 
// ########    `           `  \ `                       ######## 
// ########    `              `\                        ######## 
// ########    `                \`                      ######## 
// ########    `                 \  `                   ######## 
// ########    `                  \    `                ######## 
// ########    `                   \      `             ######## 
// ########    `                  β \      α `          ######## 
// ########    `  `  `  `  `  `  `  `\ `  `  `  `       ########
// #############################################################
// ########################### Let w is the acceleration of the  
// ############   \   ###### wedge and M is its mass, let a is   
// ##   `    `     \   ####### the accceleration of the body ### 
// #####   `    `   \   ######## with mass m ################### 
// ########   `    ` \   ####################################### 
// ###########   `    \   ###################################### 
// ##############   `  \ `  #################################### 
// ####### #########   `\   `  ################################# 
// ###### T ##########   \`    `  ############################## 
// #####  |  ##########   \  `    `  ########################### 
// ####   |   ##########   \    `    `  ######################## 
// ###### | #############   \      `    `  ##################### 
// ###### m ##############   \   ##   `    `  ################## 
// ###### | ###############   \   ####   `    `  ############### ˣ
// ###### | ################   \   ######   `    `  ############ ᵘ
// ####   |   ###############   \   ############################ 
// #####  |  ################################################### 
// ###### G #################################################### 
// ####### ##################################################### 
// ############################################################# 
// Guess what! Newton's law:
// Tˣ = Mw = maˣ
// From the geometrical connection between the motions of the
// wedge and the body we have:
// sin(β - α) = Δxsinα/Δu
// where Δx and Δu are the displacements of M and m along the
// x axis and the line having angle β, we have same relation for
// the accelerations:
// wsinα = asin(β - α)
// Funny enough from here we should be able to solve the problem:
// Mw = maˣ = macosβ = mwsinαcosβ/sin(β - α),
// M = msinαcosβ/sin(β - α) = msinαcosβ/(sinβcosα - cosβsinα) =
// = msinαcosβ/cosαcosβ/(sinβcosα - cosβsinα)/cosαcosβ =
// = mtgα/(tgβ - tgα)                                          «
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
u64 knapsack( int W, const vector<int>& w, const vector<int>& v ){
    const int n = w.size();
    vector<u64> f( W + 1 );
    for( int i = 0; i < n; ++i ){
        for( int j = W; j >= w[i]; --j ){
            f[j] = max( f[j], f[j - w[i]] + v[i] );
        }
    }
    return f[W];
}
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
int main() {
    ios::sync_with_stdio( false );
    cin.tie( nullptr );
    if( 0 ){
    } else {
        int N, W; cin >> N >> W;
        vector<int> w( N );
        vector<int> v( N );
        for( int j = 0; j < N; ++j ){
            cin >> w[j] >> v[j];
        }
        cout << knapsack( W, w, v ) << endl; 
    }
}
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Кулите на епистемиологията стърчаха като комини високо в
// небето. Предвождани от ноумена на битието, пълчищата на
// онтологията се тълпяха пред портите. Обсадени от метафизичен
// мрак, храбри философи от всички страни се бореха по
// крепостните стени, но светлината на познанието не успяваше да
// проникне мрака, който беше по-плътен от всяка дефиниция
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Exec Time                                                 8ms
// Memory                                               3832 KiB
