import sys
################################################################
################################################################
sys.setrecursionlimit( 3000000 )
################################################################
################################################################
def nput(): return input().strip()
################################################################
################################################################
################################################################
################################################################
def load_list( type ):
    return list( map( type, nput().split()))
################################################################
################################################################
################################################################
################################################################

################################################################
################################################################
################################################################
################################################################
class Algorithm:
    def __init__( self, n, m, g ):
        self.n = n
        self.m = m
        self.g = g
        self.stk = []
    def pusk( self ):
        n, m, g, stk = self.n, self.m, self.g, self.stk
        nfrooms = 0
        range_m = range( 0, m )
        for i in range( 0, n ):
            for j in range_m:
                if g[i][j] == '.':
                    self.explore( i, j )
                    nfrooms += 1
        print( nfrooms )
    def explore( self, i, j ):
        n, m, g, stk = self.n, self.m, self.g, self.stk
        stk.append(( i, j ))
        g[i][j] = '#'
        while stk:
            i, j = stk.pop()
            if i - 1 >= 0 and g[i - 1][j] == '.':
                stk.append(( i - 1, j ))
                g[i - 1][j] = '#'
            if j + 1 < m and g[i][j + 1] == '.':
                stk.append(( i, j + 1 ))
                g[i][j + 1] = '#'
            if i + 1 < n and g[i + 1][j] == '.':
                stk.append(( i + 1, j ))
                g[i + 1][j] = '#'
            if j - 1 >= 0 and g[i][j - 1] == '.':
                stk.append(( i, j - 1 ))
                g[i][j - 1] = '#'
################################################################
################################################################
################################################################
################################################################
if __name__ == '__main__':
    if 0: pass
    else:
        n, m = load_list( int )
        g = [list( nput()) for _ in range( n )]
        Algorithm( n, m, g ).pusk()
################################################################
################################################################
################################################################
################################################################
